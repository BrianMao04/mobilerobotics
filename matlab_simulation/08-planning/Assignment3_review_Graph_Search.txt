Graph Search

Good job on the assignment. It worked and was easy to follow. I have the following comments that might or might not be useful. Let me know your thoughts.

example_search_graph.m
- I always like starting my script with a
clear all;
clc;
close all.
to get rid of all previous variables and close all plots. Maybe that might be useful ?
- Maybe a line at the top telling users what to expect, just highlevel BFS, DFS etc
- In the add closest p edges since it is symmetric, would it be better to go through j=i:n and not j=1:n? (line 15). That way node 1 will be compared to all, but then node 2 will start comparing from node 2 to n and not need to compare it to node 1 again. Node 3 will start comparing from 3 to n etc.
- Could the loop to 'Pick furthest apart start and end nodes' be fused with the 'add closest p edges' loop so that we dont have to run a new loop at [line 32]. It seems like the norm is being calculated again and there might not be a need for it. 
- Would the function pdist2 be more useful when calculating distances between sets of points instead of the for loop ? http://www.mathworks.com/help/stats/pdist2.html

shortestpath.m
- It seems like the matrix 'dists' [line 46] is the exact same copy of the matrix 'D' calculated in example_search_graph.m. For a large number of nodes this might be computationally expensive.
- I think a key fact might be to include a heuristic (manhattan, euclidean etc) for the 'shortestpath' function according to Prof. Waslanders instructions. I think right now its just using the euclidean distance.

Other:
- It would be nice to show a table of how many nodes were expanded and the run time of each algorithm for comparison
- I think a better visualization might be a subplot showing the final solution of all the 4 plots together.
- The Plots could also include the title to state which method is being used

Hope the comments were helpful. Good luck and great job !!

